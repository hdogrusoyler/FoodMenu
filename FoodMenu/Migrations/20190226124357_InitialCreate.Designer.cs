// <auto-generated />
using System;
using FoodMenu.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FoodMenu.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20190226124357_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FoodMenu.Models.Food", b =>
                {
                    b.Property<int>("FoodId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("FoodId");

                    b.ToTable("Foods");
                });

            modelBuilder.Entity("FoodMenu.Models.FoodMenu", b =>
                {
                    b.Property<int>("FoodId");

                    b.Property<int>("MenuId");

                    b.HasKey("FoodId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("FoodMenus");
                });

            modelBuilder.Entity("FoodMenu.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("MenuDate")
                        .HasMaxLength(50);

                    b.HasKey("MenuId");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("FoodMenu.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("TCKN")
                        .HasMaxLength(11);

                    b.Property<bool>("isAdmin")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FoodMenu.Models.UserMenu", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("MenuId");

                    b.HasKey("UserId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("UserMenus");
                });

            modelBuilder.Entity("FoodMenu.Models.FoodMenu", b =>
                {
                    b.HasOne("FoodMenu.Models.Food", "Food")
                        .WithMany("FoodMenus")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FoodMenu.Models.Menu", "Menu")
                        .WithMany("FoodMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FoodMenu.Models.UserMenu", b =>
                {
                    b.HasOne("FoodMenu.Models.Menu", "Menu")
                        .WithMany("UserMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FoodMenu.Models.User", "User")
                        .WithMany("UserMenus")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
